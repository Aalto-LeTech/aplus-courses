package fi.aalto.cs.intellij.ui;

import com.intellij.ui.components.JBList;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import fi.aalto.cs.intellij.common.Course;
import fi.aalto.cs.intellij.presentation.CourseModel;
import fi.aalto.cs.intellij.presentation.ModuleListElementModel;
import fi.aalto.cs.intellij.services.PluginSettings;
import fi.aalto.cs.intellij.ui.module.ModuleListView;
import java.awt.Dimension;
import java.awt.Insets;
import javax.swing.JPanel;
import org.jetbrains.annotations.NotNull;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ModuleList {
  private static final Logger logger = LoggerFactory
      .getLogger(ModuleList.class);

  @NotNull
  private JBList<ModuleListElementModel> modules;
  @NotNull
  private JPanel basePanel;

  /**
   * Initializes a panel with a list of modules.
   */
  public ModuleList() {
    basePanel = new JPanel();
    basePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));

    Course currentlyLoadedCourse = PluginSettings.getInstance().getCurrentlyLoadedCourse();

    CourseModel courseModel = new CourseModel(currentlyLoadedCourse);

    modules = new ModuleListView(courseModel.getModuleListPM());


    addModulesListToBasePanel();
  }

  @NotNull
  public JPanel getBasePanel() {
    return basePanel;
  }

  private void addModulesListToBasePanel() {
    // Generated by GUI designer
    basePanel.add(modules,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null,
            new Dimension(150, 50), null, 0, false));
  }

}
