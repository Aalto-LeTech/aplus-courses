package fi.aalto.cs.apluscourses.ui.courseproject;

import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.openapi.ui.Messages;
import javax.swing.Action;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import fi.aalto.cs.apluscourses.ui.Binding;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

// https://www.jetbrains.org/intellij/sdk/docs/user_interface_components/dialog_wrapper.html
public class ImportIdeSettingsDialog extends DialogWrapper {
  private JPanel basePanel;
  private JCheckBox optOutCheckBox;
  @Binding
  private JLabel textLabel;


  /**
   * Construct a IDE settings dialog with the given project.
   * @param project The project that gets passed to the constructor of {@link DialogWrapper}.
   */
  public ImportIdeSettingsDialog(@NotNull Project project) {
    super(project);
    setTitle("Adjust IntelliJ IDEA Settings");
    setButtonsAlignment(SwingConstants.CENTER);
    init();
  }

  @Override
  protected @Nullable JComponent createCenterPanel() {
    return basePanel;
  }

  @Override
  protected @NotNull Action[] createActions() {
    /*
     * The default implementation returns both OK and CANCEL actions. We only want the OK button in
     * this dialog.
     */
    return new Action[]{getOKAction()};
  }

  @Override
  protected void doOKAction() {
    if (optOutCheckBox.isSelected()) {
      // Pressing the OK button with the opt out check box selected is equivalent to closing the
      // dialog.
      close(CANCEL_EXIT_CODE);
    } else {
      close(OK_EXIT_CODE);
    }
  }

  // Checkstyle doesn't like the abbreviation UI, but this method is generated by the GUI designer
  @SuppressWarnings("checkstyle:AbbreviationAsWordInName")
  private void createUIComponents() {
    textLabel = new JLabel(Messages.getInformationIcon());
  }
}
